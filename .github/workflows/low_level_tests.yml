name: LowLevelTests
on: [ push ]

jobs:
  Run-Tests:
    name: NanoPB Tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [ { cc: gcc-10, cxx: g++-10 },
                    { cc: gcc-11, cxx: g++-11 },
                    { cc: clang-11, cxx: clang++-11 },
                    { cc: clang-12, cxx: clang++-12 },
                    { cc: clang-13, cxx: clang++-13 },
                    { cc: clang-14, cxx: clang++-14 },
                    #{ cc: clang-15, cxx: clang++-15 },
                    { cc: clang-16, cxx: clang++-16 } ]
        build: [ Release, Debug ]
    env:
      CC: ${{ matrix.compiler.cc }}
      CXX: ${{ matrix.compiler.cxx }}
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          repository: nanopb/nanopb
      - name: Install dependencies
        run: |
          # Taken from https://apt.llvm.org/
          wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          sudo add-apt-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy main"
          sudo add-apt-repository "deb-src http://apt.llvm.org/jammy/ llvm-toolchain-jammy main"
          sudo apt-get update
          sudo apt-get install -y g++-9 g++-10 g++-11 protobuf-compiler valgrind python3-protobuf clang-* scons lcov
      - name: Run tests
        run: |
          scons
          mkdir build/coverage
          lcov --base-directory . --directory build/ -c -o build/coverage/nanopb.info
          lcov -r build/coverage/nanopb.info '*tests*' -o build/coverage/nanopb.info
          genhtml -o build/coverage build/coverage/nanopb.info
      - uses: actions/upload-artifact@v3
        with:
          name: RunResults
          path: build/Tests/LowLevel
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.compiler.cc }}
          path: build/Tests/LowLevel
